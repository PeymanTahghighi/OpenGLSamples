#pragma once
//====================================================================================================================
//====================================================================================================================
#include<cassert>
//====================================================================================================================
//====================================================================================================================

//--------------------------------------------------------------------------------------------------------------------
template<typename T>
class Singleton
{
public:
	static void createInstance()
	{
		if (m_instance == nullptr)
		{
			m_instance = new T();
		}
	}

	static T * getInstance()
	{
		assert(m_instance != nullptr);
		return m_instance;
	}

	static void destroyInstance()
	{
		assert(m_instance != nullptr);
		delete m_instance;
	}

private:
	static T * m_instance;
};
//--------------------------------------------------------------------------------------------------------------------
template<typename T> T* Singleton<T>::m_instance = nullptr;
//--------------------------------------------------------------------------------------------------------------------